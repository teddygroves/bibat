.PHONY: clean-inferences clean-plots clean-stan clean-all analysis env test {% if docs_format != 'No docs' %}docs clean-docs{% endif %}

SRC = src
NOTEBOOK_DIR = notebooks
{% if docs_format != 'No docs' %}DOCS_DIR = docs{% endif %}
{% if docs_format == 'Sphinx' %}DOCS_BUILDDIR = docs/build{% endif %}
{% if docs_format == 'Quarto' %}REPORT_STEM = docs/report
QUARTO_EXTENSIONS_FOLDER = $(DOCS_DIR)/_extensions{% endif %}

ifeq ($(OS),Windows_NT)
	INSTALL_CMDSTAN_FLAGS =  --version git:develop --cores 2
	VENV_BINARY_DIR = .venv/Scripts
	ACTIVATE_VENV_FILE = .venv/Scripts/activate
	ACTIVATE_VENV = $(ACTIVATE_VENV_FILE)
else
	INSTALL_CMDSTAN_FLAGS = --cores 2
	VENV_BINARY_DIR = .venv/bin
	ACTIVATE_VENV_FILE = .venv/bin/activate
	ACTIVATE_VENV = . $(ACTIVATE_VENV_FILE)
endif

PYTHON = $(VENV_BINARY_DIR)/python
JUPYTER = $(VENV_BINARY_DIR)/jupyter

env: $(ACTIVATE_VENV_FILE)

$(ACTIVATE_VENV_FILE):
	python -m venv .venv --prompt={{project_name_no_spaces}}
	$(PYTHON) -m pip install --upgrade pip
	$(PYTHON) -m pip install -e .
	$(PYTHON) -m cmdstanpy.install_cmdstan $(INSTALL_CMDSTAN_FLAGS)

{% if docs_format == 'Quarto' -%}
$(QUARTO_EXTENSIONS_FOLDER):
	cd docs && quarto add quarto-ext/include-code-files && cd -
{%- endif %}

{% if docs_format != 'No docs' %}docs: $(ACTIVATE_VENV_FILE) {%- if docs_format == 'Quarto' %} $(QUARTO_EXTENSIONS_FOLDER){% endif %}
	$(ACTIVATE_VENV) && (\ {%- endif %}
		{% if docs_format == 'Sphinx' %}sphinx-build "$(DOCS_DIR)" "$(DOCS_BUILDDIR)" -b html; \
   	{% elif docs_format == 'Quarto' %}quarto render $(REPORT_STEM).qmd; \
		{%- endif %}
{% if docs_format != 'No docs' %}	){% endif %}

test: $(ACTIVATE_VENV_FILE)
	$(PYTHON) -m pip install -e .'[dev]'
	$(PYTHON) -m pytest || exit 1

analysis: $(ACTIVATE_VENV_FILE)
	$(PYTHON) $(SRC)/data_preparation.py || exit 1
	$(PYTHON) $(SRC)/fitting.py || exit 1
	$(JUPYTER) execute $(NOTEBOOK_DIR)/investigate.ipynb || exit 1

{% if docs_format != 'No docs' %}clean-docs:{% endif -%}
	{% if docs_format == 'Sphinx' -%}$(RM) -r $(DOCS_BUILDDIR)
	{%- elif docs_format == 'Quarto' %}
	$(RM) $(shell find $(DOCS_DIR) -iname "$(REPORT_STEM).*" -type f -not -name "*.qmd")
	{%- endif %}

clean-stan:
	$(RM) $(shell find ./$(SRC)/stan -perm +100 -type f) # remove binary files
	$(RM) $(SRC)/stan/*.hpp

clean-inferences:
	$(RM) $(shell find ./inferences/* -type f -not -name "*.toml")

clean-plots:
	$(RM) -r plots/*.png

clean-prepared-data:
	$(RM) -r data/prepared/*/

clean-all: clean-prepared-data clean-stan clean-inferences clean-plots {% if docs_format != 'No docs' %}clean-docs{% endif %}
