[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "bibat"
authors = [
    {name = "Teddy Groves", email = "tedgro@dtu.dk"},
]
version = "0.3.0"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: POSIX",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
license = {text = "GNU General Public License version 3"}
description = "Batteries-included Bayesian analysis template"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "arviz",
    "cmdstanpy",
    "copier",
    "numpy",
    "pandas",
    "pandera",
    "pip >= 20",
    "pydantic",
    "scikit-learn",
    "stanio",
    "toml",
    "xarray",
    "zarr",
]

[project.optional-dependencies]
development = [
    "black",
    "pre-commit",
    "codecov",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
    "pymdown-extensions",
    "pytest",
    "pytest-cov",
    "tox",
    "ruff",
]
[project.urls]
homepage = "https://github.com/teddygroves/bibat"
download = "https://pypi.org/project/bibat"
documentation = "https://bibat.readthedocs.io/"

[tool.setuptools]
packages = ["bibat"]

[tool.black]
line-length = 80

[tool.ruff]
line-length = 80
[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "TD",  # ignore flake8-todo rules
    "FIX",  # ignore flake8-fixme rules
    "D203",  # we want no blank line before class docstrings
    "D213",  # multiline docstrings should start just after the quotemarks
    #"FA100",  # pydantic/__future__ problem: see https://github.com/astral-sh/ruff/issues/5434
]
[tool.ruff.lint.isort]
known-first-party = ["bibat", "src"]

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["INP001"]

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.coverage.run]
omit = ["template/*", "example_projects/*"]
[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]
